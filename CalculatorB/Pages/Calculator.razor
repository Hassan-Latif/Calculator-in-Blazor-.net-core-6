@page "/"
@inject IJSRuntime JS

<h2>Calculator</h2>

    <div class="flex-box-model">
       
        <input type="text" class="dis-box" id="result" value=""/>
   
        
        <div class="btn-container">
            <span class="button"  @onclick="@(() => display("1"))">1</span>
            <span class="button"  @onclick="@(() => display("2"))">2</span>
            <span class="button"  @onclick="@(() => display("3"))">3</span>
            <span class="button yellow-btn"  @onclick="@(() => display("+"))">+</span>
            <span class="button"  @onclick="@(() => display("4"))">4</span>
            <span class="button"  @onclick="@(() => display("5"))">5</span>
            <span class="button"  @onclick="@(() => display("6"))">6</span>
            <span class="button yellow-btn button2"  @onclick="@(() => display("-"))">-</span>
            <span class="button"  @onclick="@(() => display("7"))">7</span>
            <span class="button"  @onclick="@(() => display("8"))">8</span>
            <span class="button"  @onclick="@(() => display("9"))">9</span>
            <span class="button yellow-btn button2"   @onclick="@(() => display("*"))">*</span>
            <span id="button-c" class="button" @onclick="Clear">C</span>
            <span class="button"  @onclick="@(() => display("0"))">0</span>
            <span id="button-e" class="button" @onclick="Calculate">=</span>
            <span class="button yellow-btn button2" onclick='displayOnScreen("/")'>/</span>
        </div>
    </div>

 

@code {
    private string? show;
    private async Task display(string Number)
    {
        await JS.InvokeVoidAsync("displayOnScreen",Number);
    }

    private async Task Calculate()
    {
        await JS.InvokeVoidAsync("calculate");
    }

    private async Task Clear()
    {
        await JS.InvokeVoidAsync("clearScreen");
    }
}
